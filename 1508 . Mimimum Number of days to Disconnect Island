class Solution {
    public int minDays(int[][] grid) {
        int ans=numIslands(grid);
        if(ans==0 || ans>=2){
            return 0;
        }
        for(int i=0; i<grid.length; i++){
            for(int j=0; j<grid[0].length; j++){
                if(grid[i][j]==1){
                    grid[i][j]=0;
                    int x=numIslands(grid);
                    if(x>=2 || x==0){
                        return 1;
                    }
                    grid[i][j]=1;
                }
            }
        }
        return 2;
    }
    public int numIslands(int[][] grid) {
        int[][] temp=new int[grid.length][grid[0].length];
        for(int i=0; i<grid.length; i++){
            for(int j=0; j<grid[0].length; j++){
                temp[i][j]=grid[i][j];
            }
        }
        int ans=0;
        int m=grid.length;
        int n=grid[0].length;
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(temp[i][j]==1){
                    ans++;
                    dfs(i,j,temp,m,n);
                }
            }
        }
        return ans;
    }
    void dfs(int i,int j,int[][] temp,int m,int n){
        if(i<0 || j<0 || i>=m || j>=n)
        return;
        if(temp[i][j]!=1)
        return;
        temp[i][j]=2;
        dfs(i-1,j,temp,m,n);
        dfs(i+1,j,temp,m,n);
        dfs(i,j-1,temp,m,n);
        dfs(i,j+1,temp,m,n);
    }
}
