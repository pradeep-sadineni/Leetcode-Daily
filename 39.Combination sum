class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
       List<List<Integer>> res=new ArrayList<>();
       ArrayList<Integer> temp=new ArrayList<>();
       helper(candidates,target,0,temp,res); 
       return res;
    }
    public static void helper(int[] candidates,int target,int index, ArrayList<Integer> temp ,List<List<Integer>> res){
        if(index==candidates.length){
            if(target==0){
                res.add(new ArrayList<>(temp));
            }
            return;
        }
        if(candidates[index]<=target){
            temp.add(candidates[index]);
            helper(candidates,target-candidates[index],index,temp,res);
            temp.remove(temp.size()-1);
        }
        helper(candidates,target,index+1,temp,res);
    }
}
