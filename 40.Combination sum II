class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res=new ArrayList<>();
        Arrays.sort(candidates);
        List<Integer> temp=new ArrayList<>();
        helper(candidates,target,0,temp,res);
        return res;
    }
    public static void helper(int[] candidates,int target,int index,List<Integer> temp,List<List<Integer>> res){
         if (target == 0) {
            res.add(new ArrayList < > (temp));
            return;
        }
        for (int i = index; i < candidates.length; i++) {
            if (i > index && candidates[i] == candidates[i - 1]) continue;
            if (candidates[i] > target) break;

            temp.add(candidates[i]);
            helper(candidates, target - candidates[i], i+1, temp ,res);
            temp.remove(temp.size() - 1);
        }
    }
}
